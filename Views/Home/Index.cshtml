@model GeoAuth2.Models.LoginViewModel

@{
    ViewData["Title"] = "Home Page";
}



<style>
        body {
            background-color: #212529;
            color: white;
            font-family: Arial, sans-serif;
        }

        .container {
            max-width: 800px;
            margin: auto;
            padding: 20px;
        }

        .form-control {
            font-size: 1rem;
            width: 100%;
            background-color: #343a40;
            border: 1px solid #6c757d;
            color: white;
            padding: 10px;
            margin-bottom: 20px;
        }

        .custom-button {
            background-color: #17a2b8;
            border-color: #17a2b8;
            color: white;
            padding: 10px 20px;
            transition: background-color 0.3s ease, border-color 0.3s ease;
        }

        .custom-button:hover {
            background-color: #138496;
            border-color: #117a8b;
        }

        .text-center {
            text-align: center;
            margin-bottom: 20px;
        }

    .carousel {
        margin: 10px;
        border-color:red;
    
    }

    .carousel-item{
        border-radius: 30%;
    }

    .img-h{
        border-radius: 25px;
    }

    .centered{
        position: absolute;
        left: 45%;
        right: 45%;
    }
    .perrors{
        margin:10px;
        display:flex;
        justify-content:center;
    }
</style>
    <div class="container">
        <div class="text-center">
            <h1 class="display-4">Welcome to GeoAuth</h1>
            <p>Sign in with your username and password and the system will check your GPS coordinates.</p>
        </div>
        <form id="loginForm" asp-action="Login" method="post">
            <div>
                <input class="form-control" type="text" asp-for="Username" placeholder="Username" />
            </div>
            <div>
                <input class="form-control" type="password" asp-for="Password" placeholder="Password" />
            </div>
            <input type="hidden" id="Latitude" name="Latitude" />
            <input type="hidden" id="Longitude" name="Longitude" />
            <button type="button" class="btn custom-button centered" onclick="getLocation()">Login</button>
        </form>
    </div>
   <br />
<div id="carouselExampleAutoplaying" class="carousel slide" data-bs-ride="carousel">
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img src="./css/slide3.png" class="d-block w-100 img-h">
        </div>
        <div class="carousel-item">
            <img src="./css/slide1.png" class="d-block w-100 img-h">
        </div>
        <div class="carousel-item">
            <img src="./css/slide2.png" class="d-block w-100 img-h">
        </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleAutoplaying" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<script>
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(setPosition, showError);
        } else {
            alert("Geolocation is not supported by this browser.");
        }
    }

    function setPosition(position) {
        document.getElementById("Latitude").value = position.coords.latitude;
        document.getElementById("Longitude").value = position.coords.longitude;
        document.getElementById("loginForm").submit();
    }

    function showError(error) {
        switch(error.code) {
            case error.PERMISSION_DENIED:
                alert("User denied the request for Geolocation.");
                break;
            case error.POSITION_UNAVAILABLE:
                alert("Location information is unavailable.");
                break;
            case error.TIMEOUT:
                alert("The request to get user location timed out.");
                break;
            case error.UNKNOWN_ERROR:
                alert("An unknown error occurred.");
                break;
        }
    }
</script>


@if (ViewData.ModelState.IsValid == false)
{
    <script>
        document.getElementById("carouselExampleAutoplaying").style.display = "none";
    </script>
    <div class="perrors">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

